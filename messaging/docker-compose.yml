---
version: "3.9"

networks:
  default:
    name: messaging-net
    external: true

x-defaults: &service-defaults
  networks:
    - default
  security_opt:
    - no-new-privileges:true
  restart: unless-stopped

services:

  # --------------------------------------- JITSI -----------------------------------------------------------

  web: # Frontend
    <<: *service-defaults
    image: jitsi/web:${JITSI_IMAGE_TAG:-stable}
    container_name: jitsi-web
    volumes:
      - ${CONFIG}/web:/config:Z
      - ${CONFIG}/web/crontabs:/var/spool/cron/crontabs:Z
      - ${CONFIG}/transcripts:/usr/share/jitsi-meet/transcripts:Z
    environment:
      - AMPLITUDE_ID
      - ANALYTICS_SCRIPT_URLS
      - ANALYTICS_WHITELISTED_EVENTS
      - CALLSTATS_CUSTOM_SCRIPT_URL
      - CALLSTATS_ID
      - CALLSTATS_SECRET
      - CHROME_EXTENSION_BANNER_JSON
      - CONFCODE_URL
      - CONFIG_EXTERNAL_CONNECT
      - DEFAULT_LANGUAGE
      - DEPLOYMENTINFO_ENVIRONMENT
      - DEPLOYMENTINFO_ENVIRONMENT_TYPE
      - DEPLOYMENTINFO_REGION
      - DEPLOYMENTINFO_SHARD
      - DEPLOYMENTINFO_USERREGION
      - DESKTOP_SHARING_FRAMERATE_MIN
      - DESKTOP_SHARING_FRAMERATE_MAX
      - DIALIN_NUMBERS_URL
      - DIALOUT_AUTH_URL
      - DIALOUT_CODES_URL
      - DISABLE_AUDIO_LEVELS
      - DISABLE_DEEP_LINKING
      - DISABLE_GRANT_MODERATOR
      - DISABLE_HTTPS
      - DISABLE_KICKOUT
      - DISABLE_POLLS
      - DISABLE_REACTIONS
      - DROPBOX_APPKEY
      - DROPBOX_REDIRECT_URI
      - DYNAMIC_BRANDING_URL
      - ENABLE_AUDIO_PROCESSING
      - ENABLE_AUTH
      - ENABLE_BREAKOUT_ROOMS
      - ENABLE_CALENDAR
      - ENABLE_COLIBRI_WEBSOCKET
      - ENABLE_FILE_RECORDING_SERVICE
      - ENABLE_FILE_RECORDING_SERVICE_SHARING
      - ENABLE_FLOC
      - ENABLE_GUESTS
      - ENABLE_HSTS
      - ENABLE_HTTP_REDIRECT
      - ENABLE_IPV6
      - ENABLE_LETSENCRYPT
      - ENABLE_LIPSYNC
      - ENABLE_NO_AUDIO_DETECTION
      - ENABLE_NOISY_MIC_DETECTION
      - ENABLE_PREJOIN_PAGE
      - ENABLE_P2P
      - ENABLE_WELCOME_PAGE
      - ENABLE_CLOSE_PAGE
      - ENABLE_RECORDING
      - ENABLE_REMB
      - ENABLE_REQUIRE_DISPLAY_NAME
      - ENABLE_SIMULCAST
      - ENABLE_STATS_ID
      - ENABLE_STEREO
      - ENABLE_SUBDOMAINS
      - ENABLE_TALK_WHILE_MUTED
      - ENABLE_TCC
      - ENABLE_TRANSCRIPTIONS
      - ENABLE_XMPP_WEBSOCKET
      - ETHERPAD_PUBLIC_URL
      - ETHERPAD_URL_BASE
      - GOOGLE_ANALYTICS_ID
      - GOOGLE_API_APP_CLIENT_ID
      - HIDE_PREMEETING_BUTTONS
      - INVITE_SERVICE_URL
      - JICOFO_AUTH_USER
      - LETSENCRYPT_DOMAIN
      - LETSENCRYPT_EMAIL
      - LETSENCRYPT_USE_STAGING
      - MATOMO_ENDPOINT
      - MATOMO_SITE_ID
      - MICROSOFT_API_APP_CLIENT_ID
      - NGINX_RESOLVER
      - NGINX_WORKER_PROCESSES
      - NGINX_WORKER_CONNECTIONS
      - PEOPLE_SEARCH_URL
      - PUBLIC_URL
      - P2P_PREFERRED_CODEC
      - RESOLUTION
      - RESOLUTION_MIN
      - RESOLUTION_WIDTH
      - RESOLUTION_WIDTH_MIN
      - START_AUDIO_MUTED
      - START_AUDIO_ONLY
      - START_BITRATE
      - START_SILENT
      - START_WITH_AUDIO_MUTED
      - START_VIDEO_MUTED
      - START_WITH_VIDEO_MUTED
      - TESTING_CAP_SCREENSHARE_BITRATE
      - TESTING_OCTO_PROBABILITY
      - TOKEN_AUTH_URL
      - TOOLBAR_BUTTONS
      - TZ
      - VIDEOQUALITY_BITRATE_H264_LOW
      - VIDEOQUALITY_BITRATE_H264_STANDARD
      - VIDEOQUALITY_BITRATE_H264_HIGH
      - VIDEOQUALITY_BITRATE_VP8_LOW
      - VIDEOQUALITY_BITRATE_VP8_STANDARD
      - VIDEOQUALITY_BITRATE_VP8_HIGH
      - VIDEOQUALITY_BITRATE_VP9_LOW
      - VIDEOQUALITY_BITRATE_VP9_STANDARD
      - VIDEOQUALITY_BITRATE_VP9_HIGH
      - VIDEOQUALITY_ENFORCE_PREFERRED_CODEC
      - VIDEOQUALITY_PREFERRED_CODEC
      - XMPP_AUTH_DOMAIN
      - XMPP_BOSH_URL_BASE
      - XMPP_DOMAIN
      - XMPP_GUEST_DOMAIN
      - XMPP_MUC_DOMAIN
      - XMPP_RECORDER_DOMAIN
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jitsi-meet.rule=Host(`meet.${CLOUD_HOST}`)"
      - "traefik.http.routers.jitsi-meet.tls.certresolver=letsencrypt"
      - "traefik.http.services.jitsi-meet.loadbalancer.server.port=80"

  prosody: # XMPP server
    <<: *service-defaults
    image: jitsi/prosody:${JITSI_IMAGE_TAG:-stable}
    container_name: jitsi-prosody
    expose:
      - "5222"
      - "5347"
      - "5280"
    volumes:
      - ${CONFIG}/prosody/config:/config:Z
      - ${CONFIG}/prosody/prosody-plugins-custom:/prosody-plugins-custom:Z
    environment:
      - AUTH_TYPE
      - DISABLE_POLLS
      - ENABLE_AUTH
      - ENABLE_AV_MODERATION
      - ENABLE_BREAKOUT_ROOMS
      - ENABLE_GUESTS
      - ENABLE_LOBBY
      - ENABLE_XMPP_WEBSOCKET
      - GLOBAL_CONFIG
      - GLOBAL_MODULES
      - JIBRI_RECORDER_USER
      - JIBRI_RECORDER_PASSWORD
      - JIBRI_XMPP_USER
      - JIBRI_XMPP_PASSWORD
      - JICOFO_AUTH_USER
      - JICOFO_AUTH_PASSWORD
      - JICOFO_COMPONENT_SECRET
      - JIGASI_XMPP_USER
      - JIGASI_XMPP_PASSWORD
      - JVB_AUTH_USER
      - JVB_AUTH_PASSWORD
      - JWT_APP_ID
      - JWT_APP_SECRET
      - JWT_ACCEPTED_ISSUERS
      - JWT_ACCEPTED_AUDIENCES
      - JWT_ASAP_KEYSERVER
      - JWT_ALLOW_EMPTY
      - JWT_AUTH_TYPE
      - JWT_TOKEN_AUTH_MODULE
      - MATRIX_UVS_URL
      - MATRIX_UVS_ISSUER
      - MATRIX_UVS_AUTH_TOKEN
      - MATRIX_UVS_SYNC_POWER_LEVELS
      - LOG_LEVEL
      - LDAP_AUTH_METHOD
      - LDAP_BASE
      - LDAP_BINDDN
      - LDAP_BINDPW
      - LDAP_FILTER
      - LDAP_VERSION
      - LDAP_TLS_CIPHERS
      - LDAP_TLS_CHECK_PEER
      - LDAP_TLS_CACERT_FILE
      - LDAP_TLS_CACERT_DIR
      - LDAP_START_TLS
      - LDAP_URL
      - LDAP_USE_TLS
      - PUBLIC_URL
      - TURN_CREDENTIALS
      - TURN_HOST
      - TURNS_HOST
      - TURN_PORT
      - TURNS_PORT
      - TZ
      - XMPP_DOMAIN
      - XMPP_AUTH_DOMAIN
      - XMPP_GUEST_DOMAIN
      - XMPP_MUC_DOMAIN
      - XMPP_INTERNAL_MUC_DOMAIN
      - XMPP_MODULES
      - XMPP_MUC_MODULES
      - XMPP_INTERNAL_MUC_MODULES
      - XMPP_RECORDER_DOMAIN
      - XMPP_CROSS_DOMAIN
    networks:
      default:
        aliases:
          - ${XMPP_SERVER}

  jicofo: # Focus component
    <<: *service-defaults
    image: jitsi/jicofo:${JITSI_IMAGE_TAG:-stable}
    container_name: jitsi-jicofo
    volumes:
      - ${CONFIG}/jicofo:/config:Z
    environment:
      - AUTH_TYPE
      - BRIDGE_AVG_PARTICIPANT_STRESS
      - BRIDGE_STRESS_THRESHOLD
      - ENABLE_AUTH
      - ENABLE_AUTO_OWNER
      - ENABLE_CODEC_VP8
      - ENABLE_CODEC_VP9
      - ENABLE_CODEC_H264
      - ENABLE_OCTO
      - ENABLE_RECORDING
      - ENABLE_SCTP
      - ENABLE_AUTO_LOGIN
      - JICOFO_AUTH_USER
      - JICOFO_AUTH_PASSWORD
      - JICOFO_ENABLE_BRIDGE_HEALTH_CHECKS
      - JICOFO_CONF_INITIAL_PARTICIPANT_WAIT_TIMEOUT
      - JICOFO_CONF_SINGLE_PARTICIPANT_TIMEOUT
      - JICOFO_ENABLE_HEALTH_CHECKS
      - JICOFO_SHORT_ID
      - JICOFO_RESERVATION_ENABLED
      - JICOFO_RESERVATION_REST_BASE_URL
      - JIBRI_BREWERY_MUC
      - JIBRI_REQUEST_RETRIES
      - JIBRI_PENDING_TIMEOUT
      - JIGASI_BREWERY_MUC
      - JIGASI_SIP_URI
      - JVB_BREWERY_MUC
      - MAX_BRIDGE_PARTICIPANTS
      - OCTO_BRIDGE_SELECTION_STRATEGY
      - SENTRY_DSN="${JICOFO_SENTRY_DSN:-0}"
      - SENTRY_ENVIRONMENT
      - SENTRY_RELEASE
      - TZ
      - XMPP_DOMAIN
      - XMPP_AUTH_DOMAIN
      - XMPP_INTERNAL_MUC_DOMAIN
      - XMPP_MUC_DOMAIN
      - XMPP_RECORDER_DOMAIN
      - XMPP_SERVER
    depends_on:
      - prosody

  jvb: # Video bridge
    <<: *service-defaults
    image: jitsi/jvb:${JITSI_IMAGE_TAG:-stable}
    container_name: jitsi-jvb
    ports:
      - "${JVB_PORT}:${JVB_PORT}/udp"
    volumes:
      - ${CONFIG}/jvb:/config:Z
    environment:
      - DOCKER_HOST_ADDRESS
      - ENABLE_COLIBRI_WEBSOCKET
      - ENABLE_OCTO
      - JVB_AUTH_USER
      - JVB_AUTH_PASSWORD
      - JVB_BREWERY_MUC
      - JVB_PORT
      - JVB_MUC_NICKNAME
      - JVB_STUN_SERVERS
      - JVB_OCTO_BIND_ADDRESS
      - JVB_OCTO_PUBLIC_ADDRESS
      - JVB_OCTO_BIND_PORT
      - JVB_OCTO_REGION
      - JVB_WS_DOMAIN
      - JVB_WS_SERVER_ID
      - PUBLIC_URL
      - SENTRY_DSN="${JVB_SENTRY_DSN:-0}"
      - SENTRY_ENVIRONMENT
      - SENTRY_RELEASE
      - COLIBRI_REST_ENABLED
      - SHUTDOWN_REST_ENABLED
      - TZ
      - XMPP_AUTH_DOMAIN
      - XMPP_INTERNAL_MUC_DOMAIN
      - XMPP_SERVER
    depends_on:
      - prosody

  # --------------------------------------- RocketChat -----------------------------------------------------------

  rocketchat:
    <<: *service-defaults
    image: registry.rocket.chat/rocketchat/rocket.chat:${ROCKETCHAT_IMAGE_TAG:-latest}
    container_name: rocketchat
    command: >
      bash -c
        "for i in `seq 1 30`; do
          node main.js &&
          s=$$? && break || s=$$?;
          echo \"Tried $$i times. Waiting 5 secs...\";
          sleep 5;
        done; (exit $$s)"
    volumes:
      - ${APPDATA_DIR}/rocketchat/uploads:/app/uploads
    depends_on:
      - rocketchat-db
    environment:
      - ROOT_URL=https://chat.${CLOUD_HOST}
      - MONGO_URL=mongodb://rocketchat-db:27017/rocketchat?replicaSet=rs0&directConnection=true
      - MONGO_OPLOG_URL=mongodb://rocketchat-db:27017/local?replicaSet=rs0&directConnection=true
      - DEPLOY_METHOD=docker
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.rocketchat.rule=Host(`chat.${CLOUD_HOST}`)"
      - "traefik.http.routers.rocketchat.tls.certresolver=letsencrypt"
      - "traefik.http.services.rocketchat.loadbalancer.server.port=3000"

  rocketchat-db:
    <<: *service-defaults
    image: mongo:4.4 #TODO: 5.0
    container_name: rocketchat-db
    entrypoint: mongod --bind_ip_all --wiredTigerCacheSizeGB 0.5  --oplogSize 128 --replSet rs0
    volumes:
      - ${APPDATA_DIR}/rocketchat/db:/data/db
      - ${APPDATA_DIR}/rocketchat/configdb:/data/configdb

  # --------------------------------------- Matrix -----------------------------------------------------------

  synapse:
    <<: *service-defaults
    image: matrixdotorg/synapse:${SYNAPSE_IMAGE_TAG:-latest}
    container_name: matrix-synapse
    environment:
      - SYNAPSE_CONFIG_PATH=/data/homeserver.yaml
    volumes:
      - ${APPDATA_DIR}/matrix:/data
    depends_on:
      - matrix-db
      - matrix-redis
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.matrix-service-discovery.rule=Host(`${BASE_DOMAIN}`) && PathPrefix(`/.well-known/matrix/`)"
      - "traefik.http.routers.matrix-service-discovery.tls.certresolver=letsencrypt"
      - "traefik.http.routers.matrix-service-discovery.service=traefik-nginx-worker@docker"
      - "traefik.http.routers.matrix.rule=Host(`matrix.${BASE_DOMAIN}`)"
      - "traefik.http.routers.matrix.tls.certresolver=letsencrypt"
      - "traefik.http.services.matrix.loadbalancer.server.port=8008"

  matrix-redis: # TODO: update configs
    <<: *service-defaults
    image: redis:${SYNAPSE_REDIS_IMAGE_TAG:-7}
    container_name: matrix-redis
    volumes:
      - ${APPDATA_DIR}/matrix/redis:/data

  matrix-db:
    <<: *service-defaults
    image: docker.io/postgres:12-alpine
    container_name: matrix-db
    environment:
      - POSTGRES_USER=synapse
      - POSTGRES_PASSWORD=${SYNAPSE_POSTGRES_PASSWORD}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - ${APPDATA_DIR}/matrix/db:/var/lib/postgresql/data

  element-web:
    <<: *service-defaults
    image: vectorim/element-web:${ELEMENT_IMAGE_TAG:-latest}
    container_name: element-web
    volumes:
      - ${APPDATA_DIR}/matrix/element-web/config.json:/app/config.json
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.element-web.rule=Host(`element.${BASE_DOMAIN}`)"
      - "traefik.http.routers.element-web.tls.certresolver=letsencrypt"
      - "traefik.http.services.element-web.loadbalancer.server.port=80"

  synapse-admin:
    <<: *service-defaults
    image: awesometechnologies/synapse-admin:${SYNAPSE_ADMIN_IMAGE_TAG:-latest}
    container_name: synapse-admin
    hostname: synapse-admin
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.synapse-admin.rule=Host(`synapse-admin.${BASE_DOMAIN}`)"
      - "traefik.http.routers.synapse-admin.tls.certresolver=letsencrypt"
      - "traefik.http.services.synapse-admin.loadbalancer.server.port=80"

  # -------------------------- Matrix Bridges --------------------------

  mautrix-signal:
    <<: *service-defaults
    image: dock.mau.dev/mautrix/signal
    container_name: mautrix-signal
    volumes:
      - ${APPDATA_DIR}/matrix/bridges/signal:/data
      - ${APPDATA_DIR}/matrix/bridges/signal/signald:/signald
    depends_on:
      - signald
      - signal-db

  signald:
    <<: *service-defaults
    container_name: signald
    image: signald/signald:${SIGNALD_IMAGE_TAG:-stable}
    volumes:
      - ${APPDATA_DIR}/matrix/bridges/signal/signald:/signald

  signal-db:
    <<: *service-defaults
    image: postgres:13-alpine
    container_name: signal-db
    environment:
      POSTGRES_USER: mautrixsignal
      POSTGRES_DATABASE: mautrixsignal
      POSTGRES_PASSWORD: ${SIGNAL_DB_PASSWORD}
    volumes:
      - ${APPDATA_DIR}/matrix/bridges/signal-db:/var/lib/postgresql/data

  #----------------------------  Workers -----------------------------

  # synapse-appservice-worker:
  #   image: matrixdotorg/synapse
  #   depends_on:
  #     - redis
  #     - synapse
  #   healthcheck:
  #     test: ["CMD", "curl", "-fSs", "http://synapse:8008/health"]
  #     interval: 1m
  #     timeout: 10s
  #     retries: 3
  #   environment:
  #     SYNAPSE_WORKER: synapse.app.generic_worker
  #   volumes:
  #     - ${APPDATA_DIR}/matrix:/data
  #   command:
  #     - "run"
  #     - "--config-path=/data/homeserver.yaml"
  #     - "--config-path=/data/workers/appservice_worker.yaml"

  # synapse-background-worker1:
  #   image: matrixdotorg/synapse
  #   depends_on:
  #     - redis
  #     - synapse
  #   healthcheck:
  #     test: ["CMD", "curl", "-fSs", "http://synapse:8008/health"]
  #     interval: 1m
  #     timeout: 10s
  #     retries: 3
  #   environment:
  #     SYNAPSE_WORKER: synapse.app.generic_worker
  #   volumes:
  #     - ${APPDATA_DIR}/matrix:/data
  #   command:
  #     - "run"
  #     - "--config-path=/data/homeserver.yaml"
  #     - "--config-path=/data/workers/background_worker1.yaml"

  # synapse-federation-worker1:
  #   image: matrixdotorg/synapse
  #   healthcheck:
  #     test: ["CMD", "curl", "-fSs", "http://synapse:8008/health"]
  #     interval: 1m
  #     timeout: 10s
  #     retries: 3
  #   depends_on:
  #     - redis
  #     - synapse
  #   environment:
  #     SYNAPSE_WORKER: synapse.app.federation_sender
  #   volumes:
  #     - ${APPDATA_DIR}/matrix:/data
  #   command:
  #     - "run"
  #     - "--config-path=/data/homeserver.yaml"
  #     - "--config-path=/data/workers/federation_sender1.yaml"
# ------------------------------------------------------------------------------------------

